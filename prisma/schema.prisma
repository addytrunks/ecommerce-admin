generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}  

model Store{
  id String @id @default(uuid())

  billboards Billboard[] @relation("StoreToBillboard")

  categories Category[] @relation("StoreToCategory")

  sizes Size[] @relation("StoreToSize")

  colors Color[] @relation("StoreToColor")

  products Product[] @relation("StoreToProduct")

  name String
  userId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Billboard{
  id String @id @default(uuid())

  storeId String
  store Store @relation("StoreToBillboard",fields: [storeId],references: [id])

  categories Category[]

  label String 
  imageUrl String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt   

  @@index([storeId])
}

model Category{
  id String @default(uuid()) @id

  storeId String
  store Store @relation("StoreToCategory",references: [id],fields: [storeId])

  billboardId String
  billboard Billboard @relation(references: [id],fields: [billboardId])

  products Product[] @relation("CategoryToProduct")

  name String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt   

  @@index([storeId])
  @@index([billboardId])
}

model Size{
  id String @id @default(uuid())

  storeId String
  store Store @relation("StoreToSize",fields: [storeId],references: [id])

  products Product[] @relation("SizeToProduct")

  name String
  value String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt   

  @@index([storeId])
}

model Color{
  id String @id @default(uuid())

  storeId String
  store Store @relation("StoreToColor",fields: [storeId],references: [id])

  products Product[] @relation("ColorToProduct")

  name String
  value String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt   

  @@index([storeId])
}

model Product{
  id String @id @default(uuid())

  storeId String
  store Store @relation("StoreToProduct",references: [id],fields: [storeId])

  categoryId String
  category Category @relation("CategoryToProduct",fields: [categoryId],references: [id])

  sizeId String
  size Size @relation("SizeToProduct",references: [id],fields: [sizeId])

  colorId String
  color Color @relation("ColorToProduct",references: [id],fields: [colorId])

  images Image[]

  name String
  price Decimal
  isFeautured Boolean @default(false)
  isArchived Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 

  @@index([storeId])
  @@index([categoryId])
  @@index([sizeId])
  @@index([colorId])
}

model Image{
  id String @id @default(uuid())

  productId String
  product Product @relation(fields: [productId],references: [id],onDelete: Cascade)

  url String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 

  @@index([productId])
}